import{ResizeObserver as ResizeObserverPolyfill}from"@juggle/resize-observer";const ResizeObserver=window.ResizeObserver??ResizeObserverPolyfill;import{laserActiveImage,laserPausedImage,scanditLogoImage,switchCameraImage,toggleTorchImage}from"../assets/base64assets";import{BrowserHelper}from"../browserHelper";import{Camera}from"../camera";import{CameraAccess}from"../cameraAccess";import{ImageSettings}from"../imageSettings";import{Logger}from"../logger";import{SingleImageModeSettings}from"../singleImageModeSettings";import{BarcodePicker}from"./barcodePicker";export class GUI{static grandParentElementClassName="scandit scandit-container";static parentElementClassName="scandit scandit-barcode-picker";static hiddenClassName="scandit-hidden";static hiddenOpacityClassName="scandit-hidden-opacity";static videoElementClassName="scandit-video";static scanditLogoImageElementClassName="scandit-logo";static laserContainerElementClassName="scandit-laser";static viewfinderElementClassName="scandit-viewfinder";static cameraSwitcherElementClassName="scandit-camera-switcher";static cameraRecoveryElementClassName="scandit-camera-recovery";static torchTogglerElementClassName="scandit-torch-toggle";static cameraUploadElementClassName="scandit-camera-upload";static flashColorClassName="scandit-flash-color";static flashWhiteClassName="scandit-flash-white";static flashInsetClassName="scandit-flash-inset";static opacityPulseClassName="scandit-opacity-pulse";static mirroredClassName="mirrored";static pausedClassName="paused";videoElement;cameraSwitcherElement;torchTogglerElement;cameraRecoveryElement;scanner;singleImageModeEnabled;singleImageModeSettings;grandParentElement;parentElement;laserContainerElement;laserActiveImageElement;laserPausedImageElement;viewfinderElement;cameraUploadElement;cameraUploadLabelElement;cameraUploadInputElement;cameraUploadProgressElement;visibilityListener;videoPauseListener;videoResizeListener;webGLContextLostListener;newScanSettingsListener;contextCreatedShowLogoListener;contextCreatedActivateGUIListener;resizeObserver;cameraUploadCallback;mirrorImageOverrides;contextWebGL;context2d;cameraManager;originElement;scanningPaused;visible;guiStyle;videoFit;customLaserArea;customViewfinderArea;cameraUploadInProgress;cameraSwitchInProgress;dataCaptureContextCreated;isVideoElementDetached=false;constructor(e){this.scanner=e.scanner;this.originElement=e.originElement;this.singleImageModeEnabled=e.singleImageModeEnabled;this.singleImageModeSettings=e.singleImageModeSettings;this.scanningPaused=e.scanningPaused;this.cameraUploadCallback=e.cameraUploadCallback;this.mirrorImageOverrides=new Map;this.cameraUploadInProgress=false;this.cameraSwitchInProgress=false;this.dataCaptureContextCreated=false;this.grandParentElement=document.createElement("div");this.grandParentElement.className=GUI.grandParentElementClassName;this.originElement.appendChild(this.grandParentElement);this.parentElement=document.createElement("div");this.parentElement.className=GUI.parentElementClassName;this.grandParentElement.appendChild(this.parentElement);this.videoElement=document.createElement("video");this.cameraSwitcherElement=document.createElement("img");this.torchTogglerElement=document.createElement("img");this.laserContainerElement=document.createElement("div");this.laserActiveImageElement=document.createElement("img");this.laserPausedImageElement=document.createElement("img");this.cameraRecoveryElement=document.createElement("div");this.viewfinderElement=document.createElement("div");const t=document.createElement("canvas");this.webGLContextLostListener=this.handleWebGLContextLost.bind(this);if(e.singleImageModeEnabled){this.context2d=t.getContext("2d");this.cameraUploadElement=document.createElement("div");this.cameraUploadLabelElement=document.createElement("label");this.cameraUploadInputElement=document.createElement("input");this.cameraUploadProgressElement=document.createElement("div");this.setupCameraUploadGuiAssets();this.guiStyle=BarcodePicker.GuiStyle.NONE}else{this.setupContext(t);this.setupVideoElement();this.setupCameraSwitcher();this.setupTorchToggler();this.setupCameraRecovery(e.cameraRecoveryText);this.setupFullGuiAssets();this.setGuiStyle(e.guiStyle);this.setVideoFit(e.videoFit);this.setLaserArea(e.laserArea);this.setViewfinderArea(e.viewfinderArea);this.visibilityListener=this.checkAndRecoverPlayback.bind(this);document.addEventListener("visibilitychange",this.visibilityListener);this.newScanSettingsListener=this.handleNewScanSettings.bind(this);this.scanner.on("newScanSettings",this.newScanSettingsListener);this.handleNewScanSettings();this.videoPauseListener=this.handleVideoPause.bind(this);this.videoElement.addEventListener("pause",this.videoPauseListener);this.videoResizeListener=this.handleVideoResize.bind(this);this.videoElement.addEventListener("resize",this.videoResizeListener)}if(e.hideLogo){this.contextCreatedShowLogoListener=this.showScanditLogo.bind(this,e.hideLogo);this.scanner.on("contextCreated",this.contextCreatedShowLogoListener)}else{this.showScanditLogo(e.hideLogo)}this.contextCreatedActivateGUIListener=this.activateGUI.bind(this);this.scanner.on("contextCreated",this.contextCreatedActivateGUIListener);this.resize();this.resizeObserver=new ResizeObserver(()=>{this.resize()});this.resizeObserver.observe(this.originElement);this.setVisible(e.visible)}destroy(){if(this.visibilityListener!=null){document.removeEventListener("visibilitychange",this.visibilityListener)}if(this.newScanSettingsListener!=null){this.scanner.removeListener("newScanSettings",this.newScanSettingsListener)}if(this.videoPauseListener!=null){this.videoElement.removeEventListener("pause",this.videoPauseListener)}if(this.videoResizeListener!=null){this.videoElement.removeEventListener("resize",this.videoResizeListener)}if(this.contextCreatedShowLogoListener!=null){this.scanner.removeListener("contextCreated",this.contextCreatedShowLogoListener)}if(this.contextCreatedActivateGUIListener!=null){this.scanner.removeListener("contextCreated",this.contextCreatedActivateGUIListener)}this.resizeObserver.disconnect();this.grandParentElement.remove();this.videoElement.remove();this.contextWebGL?.canvas?.removeEventListener("webglcontextlost",this.webGLContextLostListener);this.contextWebGL?.getExtension("WEBGL_lose_context")?.loseContext();this.contextWebGL=undefined;this.context2d=undefined;this.originElement.classList.remove(GUI.hiddenClassName)}setCameraManager(e){this.cameraManager=e}pauseScanning(){this.scanningPaused=true;this.laserActiveImageElement.classList.add(GUI.hiddenOpacityClassName);this.laserPausedImageElement.classList.remove(GUI.hiddenOpacityClassName);this.viewfinderElement.classList.add(GUI.pausedClassName)}resumeScanning(){this.scanningPaused=false;if(this.dataCaptureContextCreated){this.laserPausedImageElement.classList.add(GUI.hiddenOpacityClassName);this.laserActiveImageElement.classList.remove(GUI.hiddenOpacityClassName);this.viewfinderElement.classList.remove(GUI.pausedClassName)}}isVisible(){return this.visible}setVisible(e){this.visible=e;if(e){this.originElement.classList.remove(GUI.hiddenClassName);if(this.guiStyle===BarcodePicker.GuiStyle.LASER){this.laserActiveImageElement.classList.remove(GUI.flashColorClassName)}else if(this.guiStyle===BarcodePicker.GuiStyle.VIEWFINDER){this.viewfinderElement.classList.remove(GUI.flashWhiteClassName)}}else{this.originElement.classList.add(GUI.hiddenClassName)}}isMirrorImageEnabled(){if(this.cameraManager?.selectedCamera!=null&&this.cameraManager?.activeCamera!=null){const e=this.mirrorImageOverrides.get(this.cameraManager.activeCamera);return e??this.cameraManager.activeCamera.cameraType===Camera.Type.FRONT}else{return false}}setMirrorImageEnabled(e,t){if(this.cameraManager?.selectedCamera!=null){if(e){this.videoElement.classList.add(GUI.mirroredClassName)}else{this.videoElement.classList.remove(GUI.mirroredClassName)}if(t){this.mirrorImageOverrides.set(this.cameraManager.selectedCamera,e)}}}setGuiStyle(e){if(this.singleImageModeEnabled){return}switch(e){case BarcodePicker.GuiStyle.LASER:this.guiStyle=e;this.laserContainerElement.classList.remove(GUI.hiddenClassName);this.viewfinderElement.classList.add(GUI.hiddenClassName);break;case BarcodePicker.GuiStyle.VIEWFINDER:this.guiStyle=e;this.laserContainerElement.classList.add(GUI.hiddenClassName);this.viewfinderElement.classList.remove(GUI.hiddenClassName);break;case BarcodePicker.GuiStyle.NONE:default:this.guiStyle=BarcodePicker.GuiStyle.NONE;this.laserContainerElement.classList.add(GUI.hiddenClassName);this.viewfinderElement.classList.add(GUI.hiddenClassName);break}}setLaserArea(e){this.customLaserArea=e;if(e==null){e=this.scanner.getScanSettings().getSearchArea()}const t=.025;const i=1-t*2;this.laserContainerElement.style.left=`${(t+e.x*i)*100}%`;this.laserContainerElement.style.width=`${e.width*i*100}%`;this.laserContainerElement.style.top=`${(t+e.y*i)*100}%`;this.laserContainerElement.style.height=`${e.height*i*100}%`}setViewfinderArea(e){this.customViewfinderArea=e;if(e==null){e=this.scanner.getScanSettings().getSearchArea()}const t=.025;const i=1-t*2;this.viewfinderElement.style.left=`${(t+e.x*i)*100}%`;this.viewfinderElement.style.width=`${e.width*i*100}%`;this.viewfinderElement.style.top=`${(t+e.y*i)*100}%`;this.viewfinderElement.style.height=`${e.height*i*100}%`}setVideoFit(e){if(this.singleImageModeEnabled){return}this.videoFit=e;if(e===BarcodePicker.ObjectFit.COVER){this.videoElement.style.objectFit="cover";this.videoElement.dataset.objectFit="cover"}else{this.videoElement.style.objectFit="contain";this.videoElement.dataset.objectFit="contain";this.scanner.applyScanSettings(this.scanner.getScanSettings().setBaseSearchArea({x:0,y:0,width:1,height:1}))}this.resize()}reassignOriginElement(e){if(!this.visible){this.originElement.classList.remove(GUI.hiddenClassName);e.classList.add(GUI.hiddenClassName)}e.appendChild(this.grandParentElement);this.checkAndRecoverPlayback().catch(()=>{});this.resize();this.resizeObserver.disconnect();this.resizeObserver.observe(e);this.originElement=e}flashGUI(){if(this.guiStyle===BarcodePicker.GuiStyle.LASER){this.flashLaser()}else if(this.guiStyle===BarcodePicker.GuiStyle.VIEWFINDER){this.flashViewfinder()}}getImageData(e){function t(e,t){return e.readyState===4&&e.videoWidth>2&&e.videoHeight>2&&t.canvas.width>2&&t.canvas.height>2}if(this.singleImageModeEnabled&&this.context2d!=null){return new Uint8Array(this.context2d.getImageData(0,0,this.context2d.canvas.width,this.context2d.canvas.height).data.buffer)}if(!this.singleImageModeEnabled){if(this.contextWebGL!=null){if(!t(this.videoElement,this.contextWebGL)||this.contextWebGL.drawingBufferWidth<=2||this.contextWebGL.drawingBufferHeight<=2){return}const i=this.contextWebGL.drawingBufferWidth*this.contextWebGL.drawingBufferHeight*4;if(e==null||e.byteLength===0||e.byteLength!==i){e=new Uint8Array(i)}this.contextWebGL.texImage2D(this.contextWebGL.TEXTURE_2D,0,this.contextWebGL.RGBA,this.contextWebGL.RGBA,this.contextWebGL.UNSIGNED_BYTE,this.videoElement);this.contextWebGL.readPixels(0,0,this.contextWebGL.drawingBufferWidth,this.contextWebGL.drawingBufferHeight,this.contextWebGL.RGBA,this.contextWebGL.UNSIGNED_BYTE,e);if(e[3]!==255){Logger.log(Logger.Level.WARN,"Detected incorrect GPU accelerated WebGL image processing, switching to canvas mode");this.contextWebGL=undefined;this.setupContext(document.createElement("canvas"),true);this.handleVideoResize();return this.getImageData(e)}return e}if(this.context2d!=null){if(!t(this.videoElement,this.context2d)){return}this.context2d.drawImage(this.videoElement,0,0);return new Uint8Array(this.context2d.getImageData(0,0,this.context2d.canvas.width,this.context2d.canvas.height).data.buffer)}}return}getVideoCurrentTime(){return this.videoElement.currentTime}setCameraSwitcherVisible(e){if(e){this.cameraSwitcherElement.classList.remove(GUI.hiddenClassName)}else{this.cameraSwitcherElement.classList.add(GUI.hiddenClassName)}}isCameraRecoveryVisible(){return!this.cameraRecoveryElement.classList.contains(GUI.hiddenClassName)}setCameraRecoveryVisible(e){if(e){this.cameraRecoveryElement.classList.remove(GUI.hiddenClassName)}else{this.cameraRecoveryElement.classList.add(GUI.hiddenClassName)}}setTorchTogglerVisible(e){if(e){this.torchTogglerElement.classList.remove(GUI.hiddenClassName)}else{this.torchTogglerElement.classList.add(GUI.hiddenClassName)}}playVideo(){const e=this.videoElement.play();e?.catch(()=>{})}setVideoVisible(e){this.videoElement.style.visibility=e?"visible":"hidden"}setCameraType(e){this.cameraUploadInputElement?.setAttribute("capture",e===Camera.Type.FRONT?"user":"environment")}setCameraUploadGuiBusyScanning(e){if(e){this.cameraUploadProgressElement.classList.remove(GUI.flashInsetClassName);this.cameraUploadElement.classList.add(GUI.opacityPulseClassName)}else{this.cameraUploadProgressElement.classList.add(GUI.flashInsetClassName);this.cameraUploadElement.classList.remove(GUI.opacityPulseClassName)}}setupContext(e,t=false){if(t){this.context2d=e.getContext("2d");return}let i=e.getContext("webgl",{alpha:false,antialias:false});if(i==null){i=e.getContext("experimental-webgl",{alpha:false,antialias:false})}if(i!=null){this.setupWebGL(i);e.addEventListener("webglcontextlost",this.webGLContextLostListener)}else{this.context2d=e.getContext("2d")}}setupWebGL(e){const t=e.createTexture();e.bindTexture(e.TEXTURE_2D,t);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i);e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0);e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE);e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE);e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST);e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST);this.contextWebGL=e}setupVideoElement(){this.videoElement.setAttribute("autoplay","autoplay");this.videoElement.setAttribute("playsinline","true");this.videoElement.setAttribute("muted","muted");this.videoElement.className=GUI.videoElementClassName;this.parentElement.appendChild(this.videoElement)}setupCameraUploadGuiAssets(){const e=BrowserHelper.userAgentInfo.getDevice().type;const t=e==="mobile"||e==="tablet"?SingleImageModeSettings.defaultMobile:SingleImageModeSettings.defaultDesktop;this.cameraUploadElement.className=GUI.cameraUploadElementClassName;Object.assign(this.cameraUploadElement.style,t.containerStyle,this.singleImageModeSettings.containerStyle);this.parentElement.appendChild(this.cameraUploadElement);const i=this.singleImageModeSettings.informationElement??t.informationElement;Object.assign(i.style,t.informationStyle,this.singleImageModeSettings.informationStyle);this.cameraUploadElement.appendChild(i);this.cameraUploadInputElement.type="file";this.cameraUploadInputElement.accept="image/*";this.cameraUploadInputElement.addEventListener("change",this.cameraUploadFile.bind(this));const a=e=>{if(this.scanningPaused||this.cameraUploadInProgress){e.preventDefault()}};this.cameraUploadInputElement.addEventListener("click",a);this.cameraUploadInputElement.addEventListener("keydown",a);this.cameraUploadLabelElement.appendChild(this.cameraUploadInputElement);const s=this.singleImageModeSettings.buttonElement??t.buttonElement;[this.cameraUploadProgressElement.style,s.style].forEach(e=>{Object.assign(e,t.buttonStyle,this.singleImageModeSettings.buttonStyle)});s.style.maxWidth="100px";s.style.maxHeight="100px";this.cameraUploadLabelElement.appendChild(s);this.cameraUploadProgressElement.classList.add("radial-progress");this.cameraUploadLabelElement.appendChild(this.cameraUploadProgressElement);this.cameraUploadElement.appendChild(this.cameraUploadLabelElement)}setupFullGuiAssets(){this.laserActiveImageElement.src=laserActiveImage;this.laserContainerElement.appendChild(this.laserActiveImageElement);this.laserPausedImageElement.src=laserPausedImage;this.laserContainerElement.appendChild(this.laserPausedImageElement);this.laserContainerElement.className=GUI.laserContainerElementClassName;this.parentElement.appendChild(this.laserContainerElement);this.viewfinderElement.className=GUI.viewfinderElementClassName;this.parentElement.appendChild(this.viewfinderElement);this.laserActiveImageElement.classList.add(GUI.hiddenOpacityClassName);this.laserPausedImageElement.classList.remove(GUI.hiddenOpacityClassName);this.viewfinderElement.classList.add(GUI.pausedClassName)}flashLaser(){this.laserActiveImageElement.classList.remove(GUI.flashColorClassName);this.laserActiveImageElement.offsetHeight;this.laserActiveImageElement.classList.add(GUI.flashColorClassName)}flashViewfinder(){this.viewfinderElement.classList.remove(GUI.flashWhiteClassName);this.viewfinderElement.offsetHeight;this.viewfinderElement.classList.add(GUI.flashWhiteClassName)}resize(){this.parentElement.style.maxWidth="";this.parentElement.style.maxHeight="";const e=this.originElement.clientWidth;const t=this.originElement.clientHeight;if(e===0||t===0){if(!this.singleImageModeEnabled){this.handleVideoDisplay(true)}return}if(this.singleImageModeEnabled){this.resizeCameraUpload(e,t)}else{this.resizeVideo(e,t);this.handleVideoDisplay(false)}}resizeCameraUpload(e,t){this.cameraUploadLabelElement.style.transform=`scale(${Math.min(1,e/300,t/300)})`}resizeVideo(e,t){if(this.videoElement.videoWidth<=2||this.videoElement.videoHeight<=2){return}const i=this.videoElement.videoWidth/this.videoElement.videoHeight;if(this.videoFit===BarcodePicker.ObjectFit.COVER){let a=1;let s=1;if(i<e/t){s=Math.min(1,t/(e/i))}else{a=Math.min(1,e/(t*i))}this.scanner.applyScanSettings(this.scanner.getScanSettings().setBaseSearchArea({x:(1-a)/2,y:(1-s)/2,width:a,height:s}));return}if(i>e/t){t=e/i}else{e=t*i}this.parentElement.style.maxWidth=`${Math.ceil(e)}px`;this.parentElement.style.maxHeight=`${Math.ceil(t)}px`;window.objectFitPolyfill(this.videoElement)}async checkAndRecoverPlayback(){const e=this.videoElement.srcObject;if(document.visibilityState==="visible"&&this.cameraManager?.activeCamera!=null&&this.videoElement?.srcObject!=null){if(!e.active||e.getVideoTracks()[0]?.muted!==false){try{Logger.log(Logger.Level.DEBUG,'Detected visibility change ("visible") event with inactive video source, try to reinitialize camera');await this.cameraManager.reinitializeCamera()}catch{}}else{Logger.log(Logger.Level.DEBUG,'Detected visibility change ("visible") event with active video source, replay video');this.playVideo()}}}updateCameraUploadProgress(e){this.cameraUploadProgressElement.setAttribute("data-progress",e)}async cameraUploadImageLoad(e){this.updateCameraUploadProgress("100");let t;let i;const a=1440;if(e.naturalWidth<=a&&e.naturalHeight<=a){t=e.naturalWidth;i=e.naturalHeight}else{if(e.naturalWidth>e.naturalHeight){t=a;i=Math.round(e.naturalHeight/e.naturalWidth*a)}else{t=Math.round(e.naturalWidth/e.naturalHeight*a);i=a}}await this.cameraUploadFileProcess(e,t,i)}async cameraUploadFileProcess(e,t,i){if(this.context2d!=null){this.context2d.canvas.width=t;this.context2d.canvas.height=i;this.context2d.drawImage(e,0,0,t,i);this.scanner.applyImageSettings({width:t,height:i,format:ImageSettings.Format.RGBA_8U})}this.setCameraUploadGuiBusyScanning(true);await this.cameraUploadCallback();this.setCameraUploadGuiBusyScanning(false);this.cameraUploadInProgress=false}cameraUploadFile(){const e=this.cameraUploadInputElement.files;if(e!=null&&e.length!==0){this.cameraUploadInProgress=true;const t=new Image;const i=new FileReader;i.onload=()=>{this.cameraUploadInputElement.value="";if(i.result!=null){t.onload=this.cameraUploadImageLoad.bind(this,t);t.onprogress=e=>{if(e.lengthComputable){const t=Math.round(e.loaded/e.total*20)*5;if(t<=100){this.updateCameraUploadProgress(t.toString())}}};t.onerror=()=>{this.cameraUploadInProgress=false;Logger.log(Logger.Level.WARN,"Could not load image from selected file")};t.src=i.result}};i.onerror=()=>{this.cameraUploadInProgress=false;Logger.log(Logger.Level.WARN,`Error while reading the file: ${i.error?.toString()}`)};this.updateCameraUploadProgress("0");i.readAsDataURL(e[0])}}async cameraSwitcherListener(e){if(!this.cameraSwitchInProgress&&this.cameraManager!=null){const t=this.cameraManager;e.preventDefault();try{const e=await CameraAccess.getCameras();if(t.activeCamera==null){return}if(e.length<=1){this.setCameraSwitcherVisible(false);return}this.cameraSwitchInProgress=true;const i=e.indexOf(t.activeCamera);let a=(i+1)%e.length;while(a!==i){try{await t.initializeCameraWithSettings(e[a],t.activeCameraSettings)}catch(s){Logger.log(Logger.Level.WARN,"Couldn't access camera:",e[a],s);a=(a+1)%e.length;if(a===i){this.setCameraSwitcherVisible(false);await t.initializeCameraWithSettings(e[a],t.activeCameraSettings)}continue}break}this.cameraSwitchInProgress=false}catch(e){Logger.log(Logger.Level.ERROR,e);this.cameraSwitchInProgress=false}}}async cameraRecoveryListener(e){e.preventDefault();if(this.cameraManager!=null){this.cameraManager.activeCamera=this.cameraManager.selectedCamera;await(this.cameraManager?.reinitializeCamera())}}setupCameraSwitcher(){this.cameraSwitcherElement.src=switchCameraImage;this.cameraSwitcherElement.className=GUI.cameraSwitcherElementClassName;this.cameraSwitcherElement.classList.add(GUI.hiddenClassName);this.parentElement.appendChild(this.cameraSwitcherElement);["touchstart","mousedown"].forEach(e=>{this.cameraSwitcherElement.addEventListener(e,this.cameraSwitcherListener.bind(this))})}setupCameraRecovery(e){this.cameraRecoveryElement.textContent=e;this.cameraRecoveryElement.className=GUI.cameraRecoveryElementClassName;this.cameraRecoveryElement.classList.add(GUI.hiddenClassName);this.parentElement.appendChild(this.cameraRecoveryElement);["touchstart","mousedown"].forEach(e=>{this.cameraRecoveryElement.addEventListener(e,this.cameraRecoveryListener.bind(this))})}setupTorchToggler(){this.torchTogglerElement.src=toggleTorchImage;this.torchTogglerElement.className=GUI.torchTogglerElementClassName;this.torchTogglerElement.classList.add(GUI.hiddenClassName);this.parentElement.appendChild(this.torchTogglerElement);["touchstart","mousedown"].forEach(e=>{this.torchTogglerElement.addEventListener(e,async e=>{if(this.cameraManager!=null){e.preventDefault();await this.cameraManager.toggleTorch()}})})}showScanditLogo(e,t){if(e&&t?.hiddenScanditLogoAllowed===true){return}const i=document.createElement("img");i.src=scanditLogoImage;i.className=GUI.scanditLogoImageElementClassName;this.parentElement.appendChild(i)}activateGUI(){this.dataCaptureContextCreated=true;if(!this.scanningPaused){this.resumeScanning()}}handleNewScanSettings(){if(this.customLaserArea==null){this.setLaserArea()}if(this.customViewfinderArea==null){this.setViewfinderArea()}}handleVideoDisplay(e){if(e&&!this.isVideoElementDetached){this.videoElement.width=this.videoElement.height=0;this.videoElement.style.opacity="0";document.body.appendChild(this.videoElement);this.isVideoElementDetached=true}else if(!e&&this.isVideoElementDetached){this.parentElement.insertAdjacentElement("afterbegin",this.videoElement);this.isVideoElementDetached=false;this.videoElement.removeAttribute("width");this.videoElement.removeAttribute("height");this.videoElement.style.removeProperty("opacity");this.resize()}}handleVideoPause(){this.playVideo()}handleVideoResize(){this.resize();if(this.videoElement.videoWidth<=2||this.videoElement.videoHeight<=2){return}if(this.contextWebGL!=null){if(this.contextWebGL.canvas.width===this.videoElement.videoWidth&&this.contextWebGL.canvas.height===this.videoElement.videoHeight){return}this.contextWebGL.canvas.width=this.videoElement.videoWidth;this.contextWebGL.canvas.height=this.videoElement.videoHeight;this.contextWebGL.viewport(0,0,this.contextWebGL.drawingBufferWidth,this.contextWebGL.drawingBufferHeight);this.scanner.applyImageSettings({width:this.contextWebGL.drawingBufferWidth,height:this.contextWebGL.drawingBufferHeight,format:ImageSettings.Format.RGBA_8U})}else if(this.context2d!=null){if(this.context2d.canvas.width===this.videoElement.videoWidth&&this.context2d.canvas.height===this.videoElement.videoHeight){return}this.context2d.canvas.width=this.videoElement.videoWidth;this.context2d.canvas.height=this.videoElement.videoHeight;this.scanner.applyImageSettings({width:this.videoElement.videoWidth,height:this.videoElement.videoHeight,format:ImageSettings.Format.RGBA_8U})}}handleWebGLContextLost(){Logger.log(Logger.Level.WARN,"WebGL context has been lost, restoring...");this.contextWebGL=undefined;this.setupContext(document.createElement("canvas"));this.handleVideoResize();Logger.log(Logger.Level.WARN,"WebGL context restored")}}