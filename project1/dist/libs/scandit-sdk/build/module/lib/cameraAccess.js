import{CameraResolutionConstraint}from"./barcodePicker/cameraManager";import{BrowserCompatibility}from"./browserCompatibility";import{BrowserHelper}from"./browserHelper";import{Camera}from"./camera";import{CustomError}from"./customError";import{Logger}from"./logger";import{UnsupportedBrowserError}from"./unsupportedBrowserError";export var CameraAccess;(function(e){const r=new Map([["DeviceCaptureError","AbortError"],["NotSupportedError","AbortError"],["ScreenCaptureError","AbortError"],["TabCaptureError","AbortError"],["TypeError","AbortError"],["InvalidStateError","NotAllowedError"],["MediaDeviceFailedDueToShutdown","NotAllowedError"],["MediaDeviceKillSwitchOn","NotAllowedError"],["PermissionDeniedError","NotAllowedError"],["PermissionDismissedError","NotAllowedError"],["DevicesNotFoundError","NotFoundError"],["SourceUnavailableError","NotReadableError"],["TrackStartError","NotReadableError"],["ConstraintNotSatisfiedError","OverconstrainedError"]]);const a=["rear","back","rück","arrière","trasera","trás","traseira","posteriore","后面","後面","背面","后置","後置","背置","задней","الخلفية","후","arka","achterzijde","หลัง","baksidan","bagside","sau","bak","tylny","takakamera","belakang","אחורית","πίσω","spate","hátsó","zadní","darrere","zadná","задня","stražnja","belakang","बैक"];let t;let i=false;e.mainCameraForTypeOverridesOnDesktop=new Map;e.deviceIdToCameraObjects=new Map;e.inaccessibleDeviceIds=new Set;function o(){i=true}function n(e){const r=e.toLowerCase();return a.some(e=>r.includes(e))}function s(e){let a;if(e.message==="Invalid constraint"){a="OverconstrainedError"}else{a=r.get(e.name)??e.name}Object.defineProperty(e,"name",{value:a})}function c(r,a){let t;if(BrowserHelper.isDesktopDevice()){if(e.mainCameraForTypeOverridesOnDesktop.has(a)){t=e.mainCameraForTypeOverridesOnDesktop.get(a)}else{t=r.filter(e=>e.cameraType===a)[0]}}else{const e=r.every(e=>e.label==="");const i=r.every(e=>e.label!=="");const o=r.length>1&&!e&&!i;if(e){t=r[a===Camera.Type.FRONT?0:r.length-1]}else if(o){const e=r.filter(e=>e.cameraType===a);if(e.length===1){t=e[0]}else if(e.length>1){t=e[a===Camera.Type.FRONT?0:e.length-1]}}else{t=r.filter(e=>e.cameraType===a).sort((e,r)=>e.label.localeCompare(r.label))[0]}}return t}e.getMainCameraForType=c;function l(r,a){function t(r,a){const t=e.mainCameraForTypeOverridesOnDesktop.get(a);if(t!=null&&r.includes(t)){r=r.filter(e=>e!==t);r.unshift(t)}return r}let i=r.filter(e=>e.cameraType===Camera.Type.FRONT);let o=r.filter(e=>e.cameraType===Camera.Type.BACK);if(BrowserHelper.isDesktopDevice()){i=t(i,Camera.Type.FRONT);o=t(o,Camera.Type.BACK)}else if(r.every(e=>e.label==="")){o.reverse()}else{i.sort((e,r)=>e.label.localeCompare(r.label));o.sort((e,r)=>e.label.localeCompare(r.label))}return a===Camera.Type.FRONT?[...i,...o]:[...o,...i]}e.sortCamerasForCameraType=l;function d(e,r){const a=e.getVideoTracks();if(a.length!==0){const e=a[0];let t;if(typeof e.getSettings==="function"){t=e.getSettings();if(t?.facingMode!=null&&t.facingMode.length>0){r.cameraType=t.facingMode==="environment"?Camera.Type.BACK:Camera.Type.FRONT}}if(e.label!=null&&e.label.length>0){r.label=e.label}}}e.adjustCameraFromMediaStream=d;function m(r){function a(r,a,t){if(e.deviceIdToCameraObjects.has(r.deviceId)){return e.deviceIdToCameraObjects.get(r.deviceId)}const i=r.label??"";let o;if(!BrowserHelper.isDesktopDevice()&&t.every(r=>r.label===""&&!e.deviceIdToCameraObjects.has(r.deviceId))){o=t.length===1||a+1<=Math.floor(t.length/2)?Camera.Type.FRONT:Camera.Type.BACK}else{o=n(i)?Camera.Type.BACK:Camera.Type.FRONT}return{deviceId:r.deviceId,label:i,cameraType:o}}const t=r.map(a).map(r=>{if(r.deviceId!==""){e.deviceIdToCameraObjects.set(r.deviceId,r)}return r}).filter(e=>!/\b(?:ir|infrared)\b/i.test(e.label)).filter(r=>!e.inaccessibleDeviceIds.has(r.deviceId));if(!BrowserHelper.isDesktopDevice()&&t.length>1&&!t.some(e=>e.cameraType===Camera.Type.BACK)){let e=t.length-1;const r=t.map(e=>{const r=e.label.match(/\b([0-9]+)MP?\b/i);if(r!=null){return parseInt(r[1],10)}return NaN});if(!r.some(e=>isNaN(e))){e=r.lastIndexOf(Math.max(...r))}t[e].cameraType=Camera.Type.BACK}return t}async function u(){if(t!=null&&t.length>0&&t.every(r=>r.label===""&&!e.deviceIdToCameraObjects.has(r.deviceId))){try{return await navigator.mediaDevices.getUserMedia({video:true,audio:false})}catch{}}}function p(r,a){if(a.length>0&&r.length===a.length&&!a.every((e,a)=>r[a].deviceId===e.deviceId)){const t={};r.forEach((r,i)=>{const o=e.deviceIdToCameraObjects.get(r.deviceId);if(o==null||o.label!==(a[i].label??"")){return}const n=a[i].deviceId;t[o.deviceId]=n;if(e.inaccessibleDeviceIds.has(o.deviceId)){e.inaccessibleDeviceIds.add(n)}o.deviceId=n;e.deviceIdToCameraObjects.set(n,o)});Logger.log(Logger.Level.DEBUG,"Detected updated camera deviceId information and updated it accordingly",t)}}async function f(e=false,r=false){const a=BrowserHelper.checkBrowserCompatibility();if(!a.fullSupport){throw new UnsupportedBrowserError(a)}navigator.mediaDevices.addEventListener("devicechange",o);if(t==null||e||i){i=false;let e;const a=t??[];t=[];try{t=await w();if(!r){e=await u();if(e!=null){t=await w()}}Logger.log(Logger.Level.DEBUG,"Camera list (devices):",...t);p(a,t)}catch(e){s(e);throw e}finally{if(e!=null){e.getVideoTracks().forEach(e=>{e.stop()})}}}const n=m(t);Logger.log(Logger.Level.DEBUG,"Camera list (cameras): ",...n);return[...n]}e.getCameras=f;function v(e){Logger.log(Logger.Level.DEBUG,"Attempt to access camera (parameters):",e.video);return new Promise((r,a)=>{window.setTimeout(()=>{(navigator.mediaDevices.getUserMedia(e)??Promise.reject(new CustomError({name:"AbortError"}))).then(r).catch(a)},0)})}function g(e){const r={resizeMode:"none"};switch(e){case CameraResolutionConstraint.ULTRA_HD:return{...r,width:{min:3200,ideal:3840,max:4096},height:{min:1800,ideal:2160,max:2400}};case CameraResolutionConstraint.FULL_HD:return{...r,width:{min:1400,ideal:1920,max:2160},height:{min:900,ideal:1080,max:1440}};case CameraResolutionConstraint.HD:return{...r,width:{min:960,ideal:1280,max:1440},height:{min:480,ideal:720,max:960}};case CameraResolutionConstraint.SD:return{...r,width:{min:640,ideal:640,max:800},height:{min:480,ideal:480,max:600}};case CameraResolutionConstraint.NONE:default:return{}}}async function C(e,r){Logger.log(Logger.Level.DEBUG,"Attempt to access camera (camera):",r);const a={audio:false,video:g(e)};if(r.deviceId===""){a.video.facingMode={ideal:r.cameraType===Camera.Type.BACK?"environment":"user"}}else{a.video.deviceId={exact:r.deviceId}}try{const e=await v(a);d(e,r);return e}catch(e){s(e);if(!["OverconstrainedError","NotReadableError","NotAllowedError"].includes(e.name)){b(r)}throw e}}e.accessCameraStream=C;function b(r){if(r.deviceId!==""){Logger.log(Logger.Level.DEBUG,"Camera marked to be inaccessible:",r);e.inaccessibleDeviceIds.add(r.deviceId)}}e.markCameraAsInaccessible=b;async function w(){let e;if(typeof navigator.enumerateDevices==="function"){e=await navigator.enumerateDevices()}else if(typeof navigator.mediaDevices==="object"&&typeof navigator.mediaDevices.enumerateDevices==="function"){e=await navigator.mediaDevices.enumerateDevices()}else{try{if(window.MediaStreamTrack?.getSources==null){throw new Error}e=await new Promise(e=>{window.MediaStreamTrack?.getSources?.(e)});e=e.filter(e=>e.kind.toLowerCase()==="video"||e.kind.toLowerCase()==="videoinput").map(e=>({deviceId:e.deviceId??"",groupId:e.groupId,kind:"videoinput",label:e.label,toJSON:function(){return this}}))}catch{throw new UnsupportedBrowserError({fullSupport:false,scannerSupport:true,missingFeatures:[BrowserCompatibility.Feature.MEDIA_DEVICES]})}}return e.filter(e=>e.kind==="videoinput")}})(CameraAccess||(CameraAccess={}));