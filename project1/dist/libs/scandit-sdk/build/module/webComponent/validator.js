import{__decorate}from"tslib";import{BarcodePicker,Camera,ScanSettings}from"..";export class Validator{static expectationMessage=new Map;static isBooleanAttribute(e){return e==="true"||e==="false"}static isBooleanProperty(e){return typeof e==="boolean"}static isIntegerAttribute(e){return typeof e==="string"&&/^-?\d+$/.test(e)}static isIntegerProperty(e){return Number.isInteger(e)}static isValidCameraType(e){return Object.values(Camera.Type).includes(e)}static isValidGuiStyle(e){return Object.values(BarcodePicker.GuiStyle).includes(e)}static isValidVideoFit(e){return Object.values(BarcodePicker.ObjectFit).includes(e)}static isValidCodeDirection(e){return Object.values(ScanSettings.CodeDirection).includes(e)}static isValidRecognitionMode(e){return Object.values(ScanSettings.RecognitionMode).includes(e)}static isArray(e){return Array.isArray(e)}static isValidJsonArray(e){let t;try{t=JSON.parse(e)}catch(e){return false}return Array.isArray(t)}static isValidSearchAreaAttribute(e){let t;try{t=JSON.parse(e)}catch(e){return false}return Validator.isValidSearchAreaProperty(t)}static isValidSearchAreaProperty(e){if(e==null||typeof e!=="object"){return false}return e.x>=0&&e.x<=1&&e.y>=0&&e.y<=1&&e.width>=0&&e.width<=1&&e.height>=0&&e.height<=1}static isValidCameraObject(e){let t;try{t=JSON.parse(e)}catch(e){return false}return typeof t?.deviceId==="string"}static isValidCameraSettingsObject(e){let t;try{t=JSON.parse(e)}catch(e){return false}return typeof t?.resolutionPreference==="string"}static isValidSingleImageModeSettingsObject(e){let t;try{t=JSON.parse(e)}catch(e){return false}return t!=null&&typeof t==="object"}static isValidTextRecognitionSettingsObject(e){let t;try{t=JSON.parse(e)}catch(e){return false}return t!=null&&typeof t==="object"}static getExpectationMessageForType(e){const t={booleanAttribute:`Expected one of "true" or "false"`,boolean:`Boolean expected`,integer:`Integer expected`,array:`Array expected`,jsonArray:`Expected JSON array`,videoFit:`Expected a valid BarcodePicker.ObjectFit"`,camera:`Expected JSON object having properties of a Camera object`,cameraSettings:`Expected JSON object having properties of a CameraSettings object`,cameraType:`Expected a valid Camera.Type"`,codeDirection:`Expected a valid ScanSettings.CodeDirection"`,recognitionMode:`Expected a valid ScanSettings.RecognitionMode"`,guiStyle:`Expected a valid BarcodePicker.GuiStyle"`,searchArea:`Expected JSON object having properties of a SearchArea object`,singleImageModeSettings:`Expected JSON object having properties of a SingleImageModeSettings object`,textRecognitionSettings:`Expected JSON object having properties of a TextRecognitionSettings object`};return t[e]}}__decorate([validationMessage("booleanAttribute")],Validator,"isBooleanAttribute",null);__decorate([validationMessage("boolean")],Validator,"isBooleanProperty",null);__decorate([validationMessage("integer")],Validator,"isIntegerAttribute",null);__decorate([validationMessage("integer")],Validator,"isIntegerProperty",null);__decorate([validationMessage("cameraType")],Validator,"isValidCameraType",null);__decorate([validationMessage("guiStyle")],Validator,"isValidGuiStyle",null);__decorate([validationMessage("videoFit")],Validator,"isValidVideoFit",null);__decorate([validationMessage("codeDirection")],Validator,"isValidCodeDirection",null);__decorate([validationMessage("recognitionMode")],Validator,"isValidRecognitionMode",null);__decorate([validationMessage("array")],Validator,"isArray",null);__decorate([validationMessage("jsonArray")],Validator,"isValidJsonArray",null);__decorate([validationMessage("searchArea")],Validator,"isValidSearchAreaAttribute",null);__decorate([validationMessage("searchArea")],Validator,"isValidSearchAreaProperty",null);__decorate([validationMessage("camera")],Validator,"isValidCameraObject",null);__decorate([validationMessage("cameraSettings")],Validator,"isValidCameraSettingsObject",null);__decorate([validationMessage("singleImageModeSettings")],Validator,"isValidSingleImageModeSettingsObject",null);__decorate([validationMessage("textRecognitionSettings")],Validator,"isValidTextRecognitionSettingsObject",null);function validationMessage(e){return(t,a)=>{t.expectationMessage.set(t[a],t.getExpectationMessageForType(e))}}