import{default as pickerStyles}from"../styles/styles.scss";import{Controller}from"./controller";import{attributes}from"./schema";export class ScanditBarcodePicker extends HTMLElement{static TAG_NAME="scandit-barcode-picker";shadowDom;controller;static get observedAttributes(){return attributes.map(t=>t.toLowerCase())}constructor(){super();this.controller=new Controller(this);this.shadowDom=this.attachShadow({mode:"open"})}static registerComponent(){if(!("customElements"in window)){return}if(customElements.get(ScanditBarcodePicker.TAG_NAME)==null){customElements.define(ScanditBarcodePicker.TAG_NAME,ScanditBarcodePicker)}return ScanditBarcodePicker.TAG_NAME}get barcodePicker(){return this.controller.picker}get root(){return this.shadowDom.querySelector("#root")}async connectedCallback(){await this.controller.viewConnectedCallback()}disconnectedCallback(){this.controller.viewDisconnectedCallback()}attributeChangedCallback(t){this.controller.attributeChangedCallback(t)}initializeDom(){this.shadowDom.innerHTML=this.initialDomContent}dispatchCustomEvent(t){this.dispatchEvent(t)}getAttributes(){return Array.from(this.attributes).map(t=>({name:t.name,value:t.value}))}waitOnChildrenReady(){return new Promise(t=>{setTimeout(t,50)})}get initialDomContent(){return`\n      <style>${this.styles}</style>\n      <div id="root"></div>\n    `}get wcStyles(){return`\n      :host {\n        display: block;\n      }\n\n      :host([hidden]) {\n        display: none;\n      }\n\n      #root {\n        height: 100%;\n      }\n    `}get styles(){return`\n      ${this.wcStyles}\n      ${pickerStyles}\n    `}}